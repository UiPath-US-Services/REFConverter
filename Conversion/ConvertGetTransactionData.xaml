<Activity mc:Ignorable="sap sap2010" x:Class="ConvertGetTransactionData" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_projectFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_dataType" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1276.8,2024</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ConvertGetTransactionData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="50">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="26">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Converts GetTransactionData workflow to use given data type&#xD;&#xA;&#xD;&#xA;Args: in_projectFolderPath, in_dataType, in_Config" DisplayName="ConvertGetTransactionData" sap:VirtualizedContainerService.HintSize="895.2,1959.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="getTransDataXamlText" />
      <Variable x:TypeArguments="x:String" Name="queueItemCode" />
      <Variable x:TypeArguments="x:String" Name="newDataTypeCode" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadTextFile Content="[getTransDataXamlText]" DisplayName="Read Text File - Workflow" FileName="[Path.Combine(in_projectFolderPath, &quot;Framework\GetTransactionData.xaml&quot;)]" sap:VirtualizedContainerService.HintSize="853.6,80.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke AddNamespace workflow" sap:VirtualizedContainerService.HintSize="853.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Conversion\AddNamespace.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InOutArgument x:TypeArguments="x:String" x:Key="io_xamlText">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="getTransDataXamlText" />
        </InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_dataType">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_dataType" />
        </InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ConvertDataType workflow" sap:VirtualizedContainerService.HintSize="853.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Conversion\ConvertDataType.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InOutArgument x:TypeArguments="x:String" x:Key="io_xamlText">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="getTransDataXamlText" />
        </InOutArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_originalDataType">
          <Literal x:TypeArguments="x:String">QueueItem</Literal>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_newDataType">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_dataType" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <If sap2010:Annotation.AnnotationText="If the data type is not a DataRow, change the TransactionData argument to an array of the given data type" Condition="[in_dataType &lt;&gt; &quot;DataRow&quot;]" DisplayName="If - DataType not DataRow" sap:VirtualizedContainerService.HintSize="853.6,307.2" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ConvertTransactionDataToArray workflow" sap:VirtualizedContainerService.HintSize="363.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Conversion\ConvertTransactionDataToArray.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_dataType">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_dataType" />
            </InArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="io_xamlText">
              <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="getTransDataXamlText" />
            </InOutArgument>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
              <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
            </InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <ui:ReadTextFile sap2010:Annotation.AnnotationText="Get original code for pulling queue item" Content="[queueItemCode]" DisplayName="Read Text File - Queue Item XAML code" FileName="XAMLSnippets\GetTransactionData_QueueItem.txt" sap:VirtualizedContainerService.HintSize="853.6,112" sap2010:WorkflowViewState.IdRef="ReadTextFile_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadTextFile>
    <If sap2010:Annotation.AnnotationText="If data type is DataRow, use code for getting transaction item from DataTable. Otherwise, use generic code for getting transaction item from an array" Condition="[in_dataType = &quot;DataRow&quot;]" DisplayName="If - Data type is DataRow" sap:VirtualizedContainerService.HintSize="853.6,542.4" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:ReadTextFile sap2010:Annotation.AnnotationText="Get new code for getting TransactionItem from TransactionData DataTable" Content="[newDataTypeCode]" DisplayName="Read Text File - New data type XAML code" FileName="XAMLSnippets\GetTransactionData_DataRow.txt" sap:VirtualizedContainerService.HintSize="384,124.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ReadTextFile>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="425.6,361.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ReadTextFile sap2010:Annotation.AnnotationText="Get new code for getting TransactionItem from TransactionData array" Content="[newDataTypeCode]" DisplayName="Read Text File - New data type XAML code" FileName="XAMLSnippets\GetTransactionData_Generic.txt" sap:VirtualizedContainerService.HintSize="384,124.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ReadTextFile>
          <Assign sap2010:Annotation.AnnotationText="Replace placeholder with given data type including namespace" DisplayName="Assign - newDataTypeCode" sap:VirtualizedContainerService.HintSize="384,104" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[newDataTypeCode]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[newDataTypeCode.Replace("&lt;T&gt;", in_Config(in_dataType).toString)]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
        </Sequence>
      </If.Else>
    </If>
    <Assign sap2010:Annotation.AnnotationText="Replace queue item code with new code" DisplayName="Assign - getTransDataXamlText" sap:VirtualizedContainerService.HintSize="853.6,91.2" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[getTransDataXamlText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Regex.Replace(getTransDataXamlText, queueItemCode, newDataTypeCode)]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:WriteTextFile sap2010:Annotation.AnnotationText="Write updated XAML code back to workflow file" DisplayName="Write Text File - Workflow" FileName="[Path.Combine(in_projectFolderPath, &quot;Framework\GetTransactionData.xaml&quot;)]" sap:VirtualizedContainerService.HintSize="853.6,165.6" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[getTransDataXamlText]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WriteTextFile>
  </Sequence>
</Activity>